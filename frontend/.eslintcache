[{"/Users/guoqianfan/Upenn/hackrathon/course-reviewer/frontend/src/index.js":"1","/Users/guoqianfan/Upenn/hackrathon/course-reviewer/frontend/src/App.js":"2","/Users/guoqianfan/Upenn/hackrathon/course-reviewer/frontend/src/reportWebVitals.js":"3","/Users/guoqianfan/Upenn/hackrathon/course-reviewer/frontend/src/Component/Main.js":"4","/Users/guoqianfan/Upenn/hackrathon/course-reviewer/frontend/src/Component/SearchBar.js":"5","/Users/guoqianfan/Upenn/hackrathon/course-reviewer/frontend/src/Component/WordCloud.js":"6","/Users/guoqianfan/Upenn/hackrathon/course-reviewer/frontend/src/Component/Comment.js":"7","/Users/guoqianfan/Upenn/hackrathon/course-reviewer/frontend/src/Component/Course.js":"8","/Users/guoqianfan/Upenn/hackrathon/course-reviewer/frontend/src/Component/ExternalLink.js":"9","/Users/guoqianfan/Upenn/hackrathon/course-reviewer/frontend/src/Component/SingleComment.js":"10"},{"size":350,"mtime":1610763133485,"results":"11","hashOfConfig":"12"},{"size":529,"mtime":1610772519901,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1610585401114,"results":"14","hashOfConfig":"12"},{"size":1226,"mtime":1610849304977,"results":"15","hashOfConfig":"12"},{"size":7302,"mtime":1610853444917,"results":"16","hashOfConfig":"12"},{"size":3106,"mtime":1610852996047,"results":"17","hashOfConfig":"12"},{"size":3698,"mtime":1610850319978,"results":"18","hashOfConfig":"12"},{"size":705,"mtime":1610850408339,"results":"19","hashOfConfig":"12"},{"size":1227,"mtime":1610852598098,"results":"20","hashOfConfig":"12"},{"size":714,"mtime":1610846210581,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"nfmw7j",{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"25"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"25"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"25"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"25"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"25"},"/Users/guoqianfan/Upenn/hackrathon/course-reviewer/frontend/src/index.js",["52","53","54","55","56"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Layout, Menu, Breadcrumb } from 'antd';\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App>\n\n    </App>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n",["57","58"],"/Users/guoqianfan/Upenn/hackrathon/course-reviewer/frontend/src/App.js",["59","60","61","62","63"],"\nimport './App.css';\nimport { Layout, Menu} from 'antd';\n\nimport Main from '../src/Component/Main.js'\n\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider, Footer } = Layout;\n\nfunction App() {\n  return (\n    <div>\n      \n        \n        <div class = \"header\">\n\n          Penn's idea - A tool for UPenn students to review past student's comments on CIS&CIT courses\n        </div>\n\n      <Main></Main>\n      <div class = \"footer\">Â©2021 Created by Lanjun Qi & Qianfan Guo</div> \n    \n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/guoqianfan/Upenn/hackrathon/course-reviewer/frontend/src/reportWebVitals.js",[],["64","65"],"/Users/guoqianfan/Upenn/hackrathon/course-reviewer/frontend/src/Component/Main.js",["66","67","68","69"],"import React, {Component}from 'react'\nimport '../App.css';\nimport { Layout, Menu} from 'antd';\nimport { UserOutlined} from '@ant-design/icons';\nimport WordCloud from './WordCloud'\nimport Comment from './Comment'\nimport ExternalLink from './ExternalLink';\nimport SearchBar from './SearchBar.js';\n\nclass Main extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            curCourse: \"cis555\"\n        }\n    }\n\n    updateCurCourse = (course) => {\n        this.setState({\n            curCourse: course\n        });\n        this.forceUpdate();\n    }\n\n    render() {\n\n        return (\n            \n            <div class = \"all\"> \n            \n                <SearchBar onClick = {this.updateCurCourse}></SearchBar>\n                {this.state.curCourse == \"\" ? <div class = \"before-main\">start searching</div> : \n                <div class = \"main\">\n                    <WordCloud curCourse = {this.state.curCourse}></WordCloud>\n                    <Comment curCourse = {this.state.curCourse}></Comment>\n                    \n                    <ExternalLink curCourse = {this.state.curCourse}></ExternalLink>\n                </div>}\n            </div>\n        )\n    }\n\n}\n\nexport default Main;","/Users/guoqianfan/Upenn/hackrathon/course-reviewer/frontend/src/Component/SearchBar.js",["70"],"/Users/guoqianfan/Upenn/hackrathon/course-reviewer/frontend/src/Component/WordCloud.js",["71"],"import React, {Component}from 'react'\nimport '../App.css';\nimport anychart from 'anychart';\n\nvar chart = anychart.tagCloud();\nclass WordCloud extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n          init: false\n        } \n     }\n     componentDidMount() {\n       this.componentDidUpdate();\n     }\n\n    componentDidUpdate() {\n      console.log(\"within componentDidUpdate\" + this.props.curCourse);\n      fetch(`http://localhost:8081/wordCloud/${this.props.curCourse}`, {\n        method: \"GET\", // The type of HTTP request.\n      })\n      .then(res =>\n        {\n         if (res.status === 401)\n          {\n           throw new Error(\"401 error\");\n          } else {\n            console.log(\"fetched\");\n            return res.json();\n          }\n        }) // Convert the response data to a JSON.\n  \n        .then(courseData => {\n          console.log(courseData);\n          \n          if (courseData.length === undefined) {\n            console.log(courseData.length);\n            //document.getElementById('container').innerText = \"no result\";\n            courseData = [\n              [\n                  \"\",\n                  \"0\"\n              ]];\n          }\n          // else{\n          //   document.getElementById('container').innerText = \"\";\n          // }\n\n          \n          courseData.map((value, i) => {\n            value[0] = value[0].toUpperCase();\n            value[1] = parseInt(value[1]);\n          })\n          console.log(\"length\" + courseData.length);\n          chart.title(\n                `Words mentioned most frequently by students who have taken ${this.props.curCourse.toUpperCase()}`\n          )\n          // set array of angles, by which words will be placed\n          .id('Container')\n          .angles([0])\n          // additional empty space in all directions from the text, only in pixels\n          .textSpacing(3);\n        \n        console.log(courseData);\n        chart.data(courseData, {\n          mode: 'by-word',\n          // the ignore items used in this sample can be obtained from the CDN\n          // https://cdn.anychart.com/samples/tag-cloud/the-old-man-and-the-sea/ignore-items.js\n          \n          minLength: 1,\n          maxItems: 400\n        });\n        // set container id for the chart\n        chart.container('container');\n        // initiate chart drawing\n        chart.draw();\n        })\n        .catch((error) => {\n        }); \n    }\n\n    render() {\n        //var thisIsMyCopy = '<p>copy copy copy <strong>strong copy</strong></p>';\n        var thisIsMyCopy = \n        `<body>\\\n            <div id=\"container\" style=\"width: 100%; height: 450px;\"> </div>\\\n            <script src=\"https://cdn.anychart.com/releases/v8/js/anychart-base.min.js\" type=\"text/javascript\"></script>\\\n            <script>\\\n            </script>\\\n        </body>`;\n    return (\n      <div>\n        <div class = \"wordcloud_content\"  dangerouslySetInnerHTML={{__html: thisIsMyCopy}}>\n\n        </div>\n        <div>{this.state.init ? \"Start search courses using side bar...\" : \"\"}</div>\n      </div>\n    )}\n}\n\nexport default WordCloud;","/Users/guoqianfan/Upenn/hackrathon/course-reviewer/frontend/src/Component/Comment.js",["72"],"import React, {Component} from 'react'\nimport '../App.css';\nimport SingleComment from './SingleComment';\n\nconst fake_json = [\n        {\n            \"content\": \"Racing car sprays burning fuel into crowd.\",\n            \"source\": \"Slack\",\n            \"time\": \"2019-12-03\"\n        }, \n        {\n            \"content\": \"Japanese princess to wed commoner.\",\n            \"source\": \"Facebook\",\n            \"time\": \"2020-10-05\"\n        },\n        {\n            \"content\": \"Man charged over missing wedding girl.\",\n            \"source\": \"Facebook\",\n            \"time\": \"2020-3-25\"\n        },\n    \n        {\n            \"content\": \"Man charged over missing wedding girl.\",\n            \"source\": \"Facebook\",\n            \"time\": \"2020-3-25\"\n        }\n    ];\n\nclass Comment extends Component {\n\n    constructor (props) {\n        super(props);\n        this.state = {\n            comment_data: \"\",\n            comment_list: []\n        }\n\n    }\n       //send api request based on the course used clicked \n       //should retrive a json array similar to the fake_json \n\n    componentDidMount() {\n        // let div_comment_list = fake_json.map((obj, i) => (\n        //     <SingleComment data = {fake_json[i]}></SingleComment>\n        // ));\n        // this.setState({\n        //     comment_list: div_comment_list\n        // });\n        this.fetchCommentList();\n            \n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.curCourse === this.props.curCourse) {\n            return;\n        }\n        this.fetchCommentList();\n        \n      }\n\n    fetchCommentList = () => {\n        fetch(`http://localhost:8081/reviews/${this.props.curCourse}`, {\n          method: \"GET\", // The type of HTTP request.\n        })\n        .then(res =>\n          {\n           if(res.status===401)\n            {\n             throw new Error(\"401 error\");\n            }else{\n              return res.json();\n            }\n          }) // Convert the response data to a JSON.\n    \n          .then(reviewData => {\n\n            if (reviewData.length === undefined) {\n                this.setState({\n                    comment_list: \"\"\n                });\n                return;\n            }\n            let div_comment_list = reviewData.map((obj, i) => (\n\n                <SingleComment data = {obj}></SingleComment>\n            ));\n            this.setState({\n                comment_data: reviewData,\n                comment_list: div_comment_list\n            });\n            \n          })\n          .catch((error) => {\n          }); \n    }\n    \n    handleSortByTime = (e) => {\n        var data = this.state.comment_data;\n        data.sort((a, b) => (a.time > b.time) ? -1 : 1);\n        this.renderCommentLists(data);\n    }\n\n    handleSortByUpvote = (e) => {\n        var data = this.state.comment_data;\n        data.sort((a, b) => (a.upvotes > b.upvotes) ? -1 : 1);\n        this.renderCommentLists(data);\n    }\n\n    renderCommentLists = () => {\n        let div_comment_list = this.state.comment_data.map((obj, i) => (\n            <SingleComment data = {obj}></SingleComment>\n        ));\n        this.setState({\n            comment_list: div_comment_list\n        });\n    }\n\n\n\n\n    render () {\n      return( \n        <div class = \"comment_all\">\n           \n            <div class = \"filter-all\">\n                <div class = \"filter-bar\">Filter by</div>\n                <button class = \"filter-bar\" onClick = {this.handleSortByTime}>Time</button>\n                <button class = \"filter-bar\" onClick = {this.handleSortByUpvote}>Upvotes</button>\n             </div>\n             <div id = \"no-result\"></div> \n            {this.state.comment_list}\n        </div>\n\n        \n      )\n    }\n}\n\nexport default Comment;","/Users/guoqianfan/Upenn/hackrathon/course-reviewer/frontend/src/Component/Course.js",["73","74","75"],"import DrawerWrapper from 'antd/lib/drawer';\nimport React, {Component} from 'react'\nimport '../App.css'\n\nclass Course extends Component {\n    constructor (props) {\n        super(props);\n    }\n\n    updateMainCourse = () => {    //pass this.state.course to parent component \n        var course = this.props.data.department + this.props.data.num;\n        console.log(\"updateMainCourse within Course \" + course);\n        this.props.onClick(course);\n    }\n\n    render() {\n        //console.log(this.props.data.department);\n        return (\n            <a href=\"#\" class=\"myButton\" onClick={this.updateMainCourse}> {this.props.data.department} {this.props.data.num}</a>\n        )\n    }\n}\n\nexport default Course;","/Users/guoqianfan/Upenn/hackrathon/course-reviewer/frontend/src/Component/ExternalLink.js",["76","77","78","79","80"],"import React, {Component}from 'react'\nimport '../App.css';\nimport penn_course_review from '../penn_course_review.png'\nimport penn_icon from '../penn_icon.png'\nclass ExternalLink extends Component {    //cur course is passed as props to External link \n    constructor(props) {\n        super(props);\n        this.state = {\n            curCourse : \"\"\n        }\n    }\n\n    render() {\n        var course = this.props.curCourse;\n        course = course.toUpperCase();\n        var courseGap = course.substr(0,3) + ' ' + course.substr(3,6);\n        var courseDash = course.substr(0,3) + '-' + course.substr(3,6);\n        var pcrLink = `https://penncoursereview.com/course/${courseDash}`;\n        var piLink = `https://www.cis.upenn.edu/~${course.toLowerCase()}`;\n        return (\n            <div>\n                <div class = \"external_link\">External Resources of {course.toUpperCase()}</div>\n                <a target=\"_blank\" href = {pcrLink}>\n                    <img id = \"pcr\" src={penn_course_review} ></img>\n                </a>\n                <a target=\"_blank\" href = {piLink}>\n                    <img id = \"pi\" src={penn_icon}></img>\n                </a>\n            </div>\n        )\n    }\n}\n\nexport default ExternalLink;\n","/Users/guoqianfan/Upenn/hackrathon/course-reviewer/frontend/src/Component/SingleComment.js",["81","82"],"import React, {Component}from 'react'\nimport '../App.css';\nimport upvoteIcon from '../arrowup.png'\n\nfunction SingleComment(props) {\n    const {data} = props;     //deconstruct the content \n\n    return (\n        \n        <div class = \"comment-line-box\">\n            \n            <p class = \"comment-content\">\n                {data.content}\n            </p>\n            <p class = \"comment-content source-and-time\">\n                From {data.source}  {data.time}  \n            </p>\n            <img id = \"upvote\" src={upvoteIcon}/>  \n            <p id = \"upvote_count\" class = \"comment-content source-and-time\">\n                {data.upvotes}\n            </p>\n\n\n        </div>\n    )\n}\n\nexport default SingleComment;",{"ruleId":"83","severity":1,"message":"84","line":5,"column":24,"nodeType":"85","messageId":"86","endLine":5,"endColumn":34},{"ruleId":"83","severity":1,"message":"87","line":7,"column":9,"nodeType":"85","messageId":"86","endLine":7,"endColumn":16},{"ruleId":"83","severity":1,"message":"88","line":8,"column":9,"nodeType":"85","messageId":"86","endLine":8,"endColumn":15},{"ruleId":"83","severity":1,"message":"89","line":8,"column":17,"nodeType":"85","messageId":"86","endLine":8,"endColumn":24},{"ruleId":"83","severity":1,"message":"90","line":8,"column":26,"nodeType":"85","messageId":"86","endLine":8,"endColumn":31},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"83","severity":1,"message":"87","line":8,"column":9,"nodeType":"85","messageId":"86","endLine":8,"endColumn":16},{"ruleId":"83","severity":1,"message":"88","line":9,"column":9,"nodeType":"85","messageId":"86","endLine":9,"endColumn":15},{"ruleId":"83","severity":1,"message":"89","line":9,"column":17,"nodeType":"85","messageId":"86","endLine":9,"endColumn":24},{"ruleId":"83","severity":1,"message":"90","line":9,"column":26,"nodeType":"85","messageId":"86","endLine":9,"endColumn":31},{"ruleId":"83","severity":1,"message":"95","line":9,"column":33,"nodeType":"85","messageId":"86","endLine":9,"endColumn":39},{"ruleId":"91","replacedBy":"96"},{"ruleId":"93","replacedBy":"97"},{"ruleId":"83","severity":1,"message":"98","line":3,"column":10,"nodeType":"85","messageId":"86","endLine":3,"endColumn":16},{"ruleId":"83","severity":1,"message":"99","line":3,"column":18,"nodeType":"85","messageId":"86","endLine":3,"endColumn":22},{"ruleId":"83","severity":1,"message":"100","line":4,"column":10,"nodeType":"85","messageId":"86","endLine":4,"endColumn":22},{"ruleId":"101","severity":1,"message":"102","line":33,"column":39,"nodeType":"103","messageId":"104","endLine":33,"endColumn":41},{"ruleId":"83","severity":1,"message":"105","line":234,"column":17,"nodeType":"85","messageId":"86","endLine":234,"endColumn":23},{"ruleId":"106","severity":1,"message":"107","line":51,"column":37,"nodeType":"108","messageId":"109","endLine":51,"endColumn":39},{"ruleId":"83","severity":1,"message":"110","line":5,"column":7,"nodeType":"85","messageId":"86","endLine":5,"endColumn":16},{"ruleId":"83","severity":1,"message":"111","line":1,"column":8,"nodeType":"85","messageId":"86","endLine":1,"endColumn":21},{"ruleId":"112","severity":1,"message":"113","line":6,"column":5,"nodeType":"114","messageId":"115","endLine":8,"endColumn":6},{"ruleId":"116","severity":1,"message":"117","line":19,"column":13,"nodeType":"118","endLine":19,"endColumn":74},{"ruleId":"83","severity":1,"message":"119","line":16,"column":13,"nodeType":"85","messageId":"86","endLine":16,"endColumn":22},{"ruleId":"120","severity":1,"message":"121","line":23,"column":17,"nodeType":"118","endLine":23,"endColumn":53},{"ruleId":"122","severity":1,"message":"123","line":24,"column":21,"nodeType":"118","endLine":24,"endColumn":63},{"ruleId":"120","severity":1,"message":"121","line":26,"column":17,"nodeType":"118","endLine":26,"endColumn":52},{"ruleId":"122","severity":1,"message":"123","line":27,"column":21,"nodeType":"118","endLine":27,"endColumn":52},{"ruleId":"83","severity":1,"message":"124","line":1,"column":16,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"122","severity":1,"message":"123","line":18,"column":13,"nodeType":"118","endLine":18,"endColumn":50},"no-unused-vars","'Breadcrumb' is defined but never used.","Identifier","unusedVar","'SubMenu' is assigned a value but never used.","'Header' is assigned a value but never used.","'Content' is assigned a value but never used.","'Sider' is assigned a value but never used.","no-native-reassign",["125"],"no-negated-in-lhs",["126"],"'Footer' is assigned a value but never used.",["125"],["126"],"'Layout' is defined but never used.","'Menu' is defined but never used.","'UserOutlined' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'murphy' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'fake_json' is assigned a value but never used.","'DrawerWrapper' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'courseGap' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]